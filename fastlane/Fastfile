# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

    desc "Builds the debug code"
    lane :buildDebug do
        gradle( task: 'assemble', build_type: 'Debug')
        gradle( task: 'bundle', build_type: 'Debug')

        apk_path = Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
        aab_path = Actions.lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH]

        UI.success("APK Path :  \"#{apk_path}\"")
        UI.success("AAB Path :  \"#{aab_path}\"")
    end

    desc "Builds release"
    lane :buildRelease do
        gradle( task: 'assemble', build_type: 'Release')
        gradle( task: 'bundle', build_type: 'Release')

        apk_path = Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
        aab_path = Actions.lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH]

        UI.success("APK Path :  \"#{apk_path}\"")
        UI.success("AAB Path :  \"#{aab_path}\"")
    end

    desc "- Ensures a clean git status"
    desc "- Increment the build number"
    desc "- Build and sign the app"
    desc "- Submit a new Internal Build to Play Store"
    desc "- Commit and push the version bump"
    lane :release do
        # Make sure we start off with a clean slate
        ensure_git_status_clean

        # Increment version code
        increment_version_code(app_project_dir: '**/app')

        # Increment version name
        increment_version_name(app_project_dir: '**/app', bump_type: 'minor')

        # Build bundle and apk
        gradle( task: 'assemble', build_type: 'Release')
        gradle( task: 'bundle', build_type: 'Release')

        # Upload internal bundle to play store
        apk_path = Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
        aab_path = Actions.lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH]

        UI.success("APK Path :  \"#{apk_path}\"")
        UI.success("AAB Path :  \"#{aab_path}\"")

        upload_to_play_store(track: 'internal', aab: "#{aab_path}")
        upload_to_play_store(track: 'internal', track_promote_to: 'alpha')
        upload_to_play_store(track: 'alpha', track_promote_to: 'beta')

        # commit and push to GitHub
        commit_android_version_bump(gradle_file_folder:"app")
        push_to_git_remote

        # Tag release and upload to Github
        gradle(task: 'githubRelease')
    end

    desc "Runs all the tests"
    lane :test do
        gradle(task: "test")
    end

    desc "Submit a new Internal Build to Play Store"
    lane :internal do
        upload_to_play_store(track: 'internal', apk: 'app/build/outputs/bundle/release/app-release.aab')
    end

    desc "Promote Internal to Alpha"
    lane :promote_internal_to_alpha do
        upload_to_play_store(track: 'internal', track_promote_to: 'alpha')
    end

    desc "Promote Alpha to Beta"
    lane :promote_alpha_to_beta do
        upload_to_play_store(track: 'alpha', track_promote_to: 'beta')
    end

    desc "Promote Beta to Production"
    lane :promote_beta_to_production do
        upload_to_play_store(track: 'beta', track_promote_to: 'production')
    end

end
